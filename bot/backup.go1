// package bot

// import (
// 	"context"
// 	"fmt"
// 	"regexp"
// 	"strings"
// 	"tweedisc-go/config"
// 	"tweedisc-go/database"

// 	"github.com/bwmarrin/discordgo"
// 	"github.com/michimani/gotwi"
// 	"github.com/michimani/gotwi/tweet/like/types"
// )

// var log = config.Log
// var BotId string
// var goBot *discordgo.Session

// func Start() {
// 	goBot, err := discordgo.New("Bot " + config.Token)

// 	if err != nil {
// 		log.Fatal(err.Error())
// 		return
// 	}

// 	u, err := goBot.User("@me")

// 	if err != nil {
// 		log.Fatal(err.Error())
// 		return
// 	}

// 	BotId = u.ID

// 	goBot.AddHandler(messageHandler)
// 	goBot.AddHandler(reactionAddHandler)

// 	err = goBot.Open()

// 	if err != nil {
// 		log.Fatal(err.Error())
// 		return
// 	}
// 	log.Println("Bot is running !")
// }

// func getTweetID(tweetLink string) string {
// 	texts := strings.Split(tweetLink, "status/")
// 	text := texts[len(texts)-1]

// 	temp := 0
// 	for _, chr := range text {
// 		if chr < '0' || chr > '9' {
// 			temp++
// 		} else {
// 			break
// 		}
// 	}

// 	return text[:temp]
// }

// func getTweetAuthor(tweetLink string) string {
// 	firstHalf := strings.Split(tweetLink, "/status")
// 	middlePart := strings.Split(firstHalf[len(firstHalf)-2], "twitter.com/")
// 	return middlePart[len(middlePart)-1]
// }

// func isTweet(link string) bool {
// 	if strings.Contains(link, "twitter.com/") && strings.Contains(link, "status") {
// 		return true
// 	}
// 	return false
// }

// func getTweetLinks(content string) []string {
// 	r := regexp.MustCompile(`http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+`)
// 	urls := r.FindAllString(content, -1)
// 	tweets := urls[:0]
// 	for _, url := range urls {
// 		if isTweet(url) {
// 			tweets = append(tweets, url)
// 		}
// 	}
// 	log.Println(tweets)
// 	return tweets
// }

// func reactionAddHandler(s *discordgo.Session, r *discordgo.MessageReactionAdd) {
// 	if r.UserID == BotId {
// 		return
// 	}

// 	m, err := s.ChannelMessage(r.ChannelID, r.MessageID)

// 	if err != nil {
// 		log.Error("Error getting message: ", err)
// 		return
// 	}

// 	if isTweet(m.Content) {
// 		log.Println(m.Content)
// 		likeTweet(m.Content, m.Author.ID)
// 		// retweetTweet(m.Content)
// 	}
// }

// func reactionRemoveHandler(s *discordgo.Session, r *discordgo.MessageReactionRemove) {
// 	if r.UserID == BotId {
// 		return
// 	}

// 	m, err := s.ChannelMessage(r.ChannelID, r.MessageID)

// 	if err != nil {
// 		log.Error("Error getting message: ", err)
// 		return
// 	}

// 	if isTweet(m.Content) {
// 		log.Println(m.Content)
// 		// unlikeTweet(m.Content)
// 		// unretweetTweet(m.Content)
// 	}
// }

// func newOAuth1Client(user database.User) (*gotwi.Client, error) {
// 	in := &gotwi.NewClientInput{
// 		AuthenticationMethod: gotwi.AuthenMethodOAuth1UserContext,
// 		OAuthToken:           user.Twitter_oauth_token,
// 		OAuthTokenSecret:     user.Twitter_oauth_verifier,
// 	}

// 	return gotwi.NewClient(in)
// }

// func likeTweet(tweetLink string, discordUserID string) error {

// 	user, err := database.GetUser(discordUserID)
// 	if err != nil {
// 		log.Println(err)
// 		return err
// 	}

// 	c, err := newOAuth1Client(user)
// 	if err != nil {
// 		log.Println(err)
// 		return err
// 	}

// 	tweetID := getTweetID(tweetLink)
// 	log.Println(fmt.Sprint(user.Twitter_user_id))
// 	log.Println(tweetID)
// 	p := &types.CreateInput{
// 		ID:      *gotwi.String(fmt.Sprint(user.Twitter_user_id)),
// 		TweetID: *gotwi.String(tweetID),
// 	}
// 	log.Println(p)

// 	// res, err := like.Create(context.Background(), c, p)
// 	res := &types.CreateOutput{}
// 	if err := c.CallAPI(context.Background(), "https://api.twitter.com/2/users/:id/likes", "POST", p, res); err != nil {
// 		log.Println(nil, err)
// 		return err
// 	}
// 	if err != nil {
// 		log.Println(err)
// 		return err
// 	}
// 	log.Println(res)

// 	return nil
// }

// func messageHandler(s *discordgo.Session, m *discordgo.MessageCreate) {
// 	if m.Author.ID == BotId {
// 		return
// 	}
// 	tweetLinks := getTweetLinks(m.Content)
// 	if len(tweetLinks) == 1 {
// 		s.MessageReactionAdd(m.ChannelID, m.ID, "‚ù§Ô∏è")
// 		s.MessageReactionAdd(m.ChannelID, m.ID, "üîÅ")
// 	} else if len(tweetLinks) > 1 {
// 		s.MessageReactionAdd(m.ChannelID, m.ID, "‚ù§Ô∏è")
// 		s.MessageReactionAdd(m.ChannelID, m.ID, "üîÅ")
// 		s.MessageReactionAdd(m.ChannelID, m.ID, "üíô")
// 		s.MessageReactionAdd(m.ChannelID, m.ID, "üîÑ")
// 	}

// 	if m.Content == "ping" {
// 		_, _ = s.ChannelMessageSend(m.ChannelID, "pong")
// 	}
// }
